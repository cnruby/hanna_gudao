= Hanna Nouveau â€” a better RDoc template, now for RDoc 2.5 and 3.0.

Based on the original Hanna by Mislav.

Hanna is an RDoc generator that scales. It's implemented in Haml, making the
sources clean and readable. It's built with simplicity, beauty and ease of
browsing in mind. (See more in {the
wiki}[http://github.com/mislav/hanna/wikis/home].)

Hanna gem is available from http://rubygems.org:

    gem install hanna-nouveau

The template was created by {Mislav}[http://mislav.caboo.se/] and since then
has seen contributions from:

1. {Tony Strauss}[http://github.com/DesigningPatterns], who participated from
   the early start and made tons of fixes and enhancements to the template;
2. {Hongli Lai}[http://blog.phusion.nl/] with the search filter for methods.
3. {Erik Hollensbe}[http://github.com/erikh] a serious refactoring and up to
   date with RDoc 2.5.x and 3.x, now named 'hanna-nouveau'.
4. {James Tucker}[http://github.com/raggi] minor cleanups for Erik.

== Usage

    rdoc -o doc -f hanna lib/*.rb

An alternative is to set the `RDOCOPT` environment variable:

    RDOCOPT="-f hanna"

This will make RDoc always use Hanna unless it is explicitly overridden.

== Integrating with RubyGems

Another neat trick is to put the following line in your .gemrc, this will make
RubyGems use Hanna for all rdoc generation:

    rdoc: -f hanna

This will make RubyGems use Hanna when generating documentation for installed
gems. Remember, if you wish to have all your gems be formatted in hanna:

    gem rdoc --all --overwrite

The first time. To easily browse your newly created documentation, use:

    gem server

== Rake task

For repeated generation of API docs, it's better to set up a Rake task. Simply
add the hanna format argument to your RDoc::Task options:

    gem 'rdoc'
    require 'rdoc/task'
    RDoc::Task.new do |rdoc|
      # this only works with RDoc 3.1 or greater
      rdoc.generator = 'hanna'
      # this is what you use pre RDoc 3.1:
      rdoc.options.push '-f', 'hanna'
    end

Tip: you can do this in the Rakefile of your Rails project before running
`rake doc:rails`.

Here is an example of a task for the {rdbi
library}[http://github.com/rdbi/rdbi/tree/master/Rakefile]:

    gem 'rdoc'
    require 'rdoc/task'
    RDoc::Task.new do |rdoc|
      version = File.exist?('VERSION') ? File.read('VERSION') : ""

      rdoc.generator = 'hanna'
      rdoc.main = 'README.rdoc'
      rdoc.rdoc_dir = 'rdoc'
      rdoc.title = "RDBI #{version} Documentation"
      rdoc.rdoc_files.include('README*')
      rdoc.rdoc_files.include('lib/**/*.rb')
    end
